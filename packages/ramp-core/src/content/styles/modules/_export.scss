@mixin export {
    .rv-export {
        align-self: flex-start; // stick the dialog to the top edge of the viewer container
        top: $viewport-gutter;
        border-radius: 0;

        max-height: calc(100% - #{$viewport-gutter} * 2);

        @media (max-width: 959px) {
            md-dialog.md-dialog-fullscreen {
                min-height: calc(100% - #{$viewport-gutter} * 2) !important;
            }
        }

        &.rv-generate-error {
            @include include-size(rv-lg) {
                min-width: 60%;
            }

            height: 60%;
        }

        &.rv-error {
            md-dialog-content .md-dialog-content {
                filter: grayscale(100%);
                opacity: 0.5;
            }
        }

        > form {
            height: 100%;
        }

        @include include-size(rv-lt-lg) {
            top: 0;
        }

        @include include-size(rv-sm) {
            .md-button {
                min-width: 0;
            }

            .md-select-value {
                padding: 0;
                min-width: 100px;
            }

            .md-button.md-icon-button {
                margin: 0;
                width: auto;
            }
        }

        // TODO: abstract that into some generic rv- class
        // this is to make primary buttons stand out, as in the import wizard
        .md-primary {
            min-width: rem(12);

            @include include-size(rv-sm) {
                min-width: rem(10);
            }
        }

        md-dialog-actions {
            position: relative;
            order: 1;
            padding: 0 rem(1.6);
            flex: 1 0 0%;
            border-bottom: 1px solid $divider-color-light;
            align-items: center;
            display: flex;

            md-select {
                margin: 0 rem(2.4) 0 0;
                max-width: rem(23);
                min-width: rem(5);
                flex: 2;

                @include include-size(rv-sm) {
                    min-width: rem(7.5);
                }
            }
        }

        md-dialog-content {
            order: 2;
            position: relative;
            overflow-x: hidden;
            height: 100%;

            .md-dialog-content {
                height: 100%;
                transition: filter, opacity $swift-ease-in-duration $swift-ease-in-out-timing-function;
            }
        }

        .rv-invert {
            background-color: $primary-color-dark;
            color: $primary-color-text;

            p,
            span {
                color: $primary-color-text;
            }

            h1,
            h2,
            h3,
            h4,
            h5,
            h6 {
                color: $primary-color-text;
            }

            .md-button[disabled] span {
                color: rgba($color: $primary-color-light, $alpha: 0.38);
            }

            md-icon {
                color: $primary-color-light;
            }

            md-input-container {
                > label {
                    color: $primary-color-light;
                }

                .md-input {
                    color: $primary-color-text;
                    border-color: $primary-color-light;

                    &::placeholder {
                        color: $primary-color-text;
                        opacity: 0.8;
                    }
                }

                div[ng-message],
                .md-char-counter {
                    color: $primary-color-light;
                }

                &.md-input-invalid .md-input {
                    border-color: $alert-color;
                }
            }
        }

        .rv-export-custom-size,
        .rv-export-settings {
            position: relative;
            top: -rem(2.4);
            left: -rem(2.4);
            width: calc(100% + #{rem(2.4)} * 2);

            padding: rem(2.4) rem(3.2);

            h4 {
                margin: rem(1.2) 0;
            }
        }

        .rv-export-custom-size {
            @include include-size(rv-gt-sm) {
                .rv-container {
                    max-width: $toolbar-width * 1.5;

                    md-input-container {
                        flex: 3;
                    }

                    md-icon {
                        flex: 1;
                    }
                }
            }

            @include include-size(rv-sm) {
                md-input-container,
                md-icon {
                    flex-basis: 100%;
                }
            }

            md-icon {
                color: $primary-color-light;
            }
        }

        .rv-export-settings .rv-list {
            margin: rem(1.8) 0;
        }

        .rv-export-section {
            // transition: filter $swift-ease-in-duration * 2 $swift-ease-in-out-timing-function;
        }

        .rv-export-plugin {
            .rv-base-graphic {
                position: relative;
            }
            .rv-graphic {
                position: absolute;
                top: 0;
                left: 0;
            }
        }

        rv-svg {
            transition: filter $swift-ease-in-duration $swift-ease-in-out-timing-function;
            display: block;

            > canvas {
                width: 100% !important;
                height: auto !important;
                display: block;
            }
        }

        %export-component {
            display: block;

            > canvas {
                width: 100% !important;
                height: auto !important;
                display: block;
            }
        }

        .rv-export-title {
            display: flex;
            justify-content: center;
            z-index: 1; // move the title field on top of the map graphic
            width: 100%;

            md-input-container {
                background: rgba(255, 255, 255, 0.86);
                padding: rem(1.6);

                > input {
                    text-align: center;
                }

                .md-errors-spacer {
                    display: none;
                }
            }

            &.rv-float {
                position: absolute;
                top: rem(2);
            }
        }

        .rv-export-select {
        }
    }
}
